<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sunflower-&gt;FE</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chriscindy.top/"/>
  <updated>2016-08-24T03:34:32.000Z</updated>
  <id>http://chriscindy.top/</id>
  
  <author>
    <name>ChrisCindy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>采用gulp优化hexohexo博客打开速度</title>
    <link href="http://chriscindy.top/2016/08/22/%E9%87%87%E7%94%A8gulp%E4%BC%98%E5%8C%96hexo%E5%8D%9A%E5%AE%A2%E6%89%93%E5%BC%80%E9%80%9F%E5%BA%A6/"/>
    <id>http://chriscindy.top/2016/08/22/采用gulp优化hexo博客打开速度/</id>
    <published>2016-08-22T09:42:36.000Z</published>
    <updated>2016-08-24T03:34:32.000Z</updated>
    
    <content type="html">&lt;p&gt;博客搭建这么久了发现并没有进行过优化，首页虽然打开速度勉强能够接受，但是 github 和 coding 提供的空间有限，是时候优化一下了。基本思路是采用 gulp 进行代码的压缩等。先占个坑，等最近有空搞一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;博客搭建这么久了发现并没有进行过优化，首页虽然打开速度勉强能够接受，但是 github 和 coding 提供的空间有限，是时候优化一下了。基本思路是采用 gulp 进行代码的压缩等。先占个坑，等最近有空搞一下。&lt;/p&gt;

    
    </summary>
    
      <category term="学以致用" scheme="http://chriscindy.top/categories/%E5%AD%A6%E4%BB%A5%E8%87%B4%E7%94%A8/"/>
    
    
      <category term="博客搭建" scheme="http://chriscindy.top/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>babel-rigster和babel-node的使用</title>
    <link href="http://chriscindy.top/2016/08/22/babel-rigster%E5%92%8Cbabel-node%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://chriscindy.top/2016/08/22/babel-rigster和babel-node的使用/</id>
    <published>2016-08-22T09:37:28.000Z</published>
    <updated>2016-08-22T10:15:37.000Z</updated>
    
    <content type="html">&lt;p&gt;Babel 6 中 &lt;code&gt;babel-register&lt;/code&gt; 和 &lt;code&gt;babel-node&lt;/code&gt; 两个模块是开发时非常好用的转码工具。先来看一下如何使用：&lt;/p&gt;
&lt;h4 id=&quot;1-babel-register&quot;&gt;&lt;a href=&quot;#1-babel-register&quot; class=&quot;headerlink&quot; title=&quot;1. babel-register&quot;&gt;&lt;/a&gt;1. babel-register&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装：&lt;code&gt;npm install babel-register&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作用：&lt;code&gt;babel-register&lt;/code&gt; 实际上为&lt;code&gt;require&lt;/code&gt;加了一个钩子（hook），之后所有被 node 引用的 &lt;code&gt;.es6&lt;/code&gt;、&lt;code&gt;.es&lt;/code&gt;、&lt;code&gt;.jsx&lt;/code&gt; 以及 &lt;code&gt;.js&lt;/code&gt; 文件都会先被 Babel 转码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用示例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//index.js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//register.js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-register&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;node register.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-babel-node&quot;&gt;&lt;a href=&quot;#2-babel-node&quot; class=&quot;headerlink&quot; title=&quot;2. babel-node&quot;&gt;&lt;/a&gt;2. babel-node&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装：&lt;code&gt;npm install babel-node&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作用：替代 CLI 中的 &lt;code&gt;node&lt;/code&gt; 命令，可以直接运行采用 ES6 语法编写的代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 npm &lt;code&gt;scripts&lt;/code&gt; 中：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;scripts&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //&quot;script-name&quot;: &quot;node main.js&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;script-name&quot;: &quot;babel-node main.js&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在命令行中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局安装 &lt;code&gt;babel-node&lt;/code&gt;：&lt;code&gt;babel-node main.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;本地安装 &lt;code&gt;babel-node&lt;/code&gt;：&lt;code&gt;./node_modules/.bin/babel-node main.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-使用局限&quot;&gt;&lt;a href=&quot;#3-使用局限&quot; class=&quot;headerlink&quot; title=&quot;3. 使用局限&quot;&gt;&lt;/a&gt;3. 使用局限&lt;/h4&gt;&lt;p&gt;尽管 &lt;code&gt;babel-register&lt;/code&gt; 和 &lt;code&gt;babel-node&lt;/code&gt; 都非常好用，但是由于二者都是实时转码，因而性能上会有一定影响。官方建议将二者仅置于开发环境下使用。而在正式生产环境中部署时，预先编译代码是值得推荐的做法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Babel 6 中 &lt;code&gt;babel-register&lt;/code&gt; 和 &lt;code&gt;babel-node&lt;/code&gt; 两个模块是开发时非常好用的转码工具。先来看一下如何使用：&lt;/p&gt;
&lt;h4 id=&quot;1-babel-register&quot;&gt;&lt;a href=&quot;#1-ba
    
    </summary>
    
      <category term="技术使用" scheme="http://chriscindy.top/categories/%E6%8A%80%E6%9C%AF%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="Babel" scheme="http://chriscindy.top/tags/Babel/"/>
    
  </entry>
  
  <entry>
    <title>Babel 6特性总结</title>
    <link href="http://chriscindy.top/2016/08/22/Babel-6%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93/"/>
    <id>http://chriscindy.top/2016/08/22/Babel-6特性总结/</id>
    <published>2016-08-22T09:33:53.000Z</published>
    <updated>2016-08-24T03:20:57.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;0-改进&quot;&gt;&lt;a href=&quot;#0-改进&quot; class=&quot;headerlink&quot; title=&quot;0. 改进&quot;&gt;&lt;/a&gt;0. 改进&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模块化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可选的插件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预设&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;性能改进&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插件 API&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Babel 5&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; &amp;#123;Plugin, types: t&amp;#125; &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Plugin(&lt;span class=&quot;string&quot;&gt;&#39;ast-transform&#39;&lt;/span&gt;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        visitor: &amp;#123; ... &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Babel 6&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; &amp;#123; types: t&amp;#125; &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        visitor: &amp;#123; ... &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-安装-Babel-6&quot;&gt;&lt;a href=&quot;#1-安装-Babel-6&quot; class=&quot;headerlink&quot; title=&quot;1.安装 Babel 6&quot;&gt;&lt;/a&gt;1.安装 Babel 6&lt;/h3&gt;&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;babel-cli&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;usage:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;babel app.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;command: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-o –out-file&lt;/li&gt;
&lt;li&gt;-d –out-dir&lt;/li&gt;
&lt;li&gt;-w –watch&lt;/li&gt;
&lt;li&gt;–source-maps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;babel-register&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//index.js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//register.js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-register&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;node register.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注：生产环境不适用 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;babel-node&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;scripts&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //&quot;script-name&quot;: &quot;node index.js&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;script-name&quot;: &quot;babel-node index.js&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;command:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;–presets&lt;/li&gt;
&lt;li&gt;–plugins&lt;/li&gt;
&lt;li&gt;–ignore&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：生产环境不适用 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;babel-core&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; babel = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-core&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;babel.transform(&lt;span class=&quot;string&quot;&gt;&quot;code();&quot;&lt;/span&gt;, options);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;babel.transformFile(&lt;span class=&quot;string&quot;&gt;&quot;filename.js&quot;&lt;/span&gt;, options, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  result; &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;babel.transformFileSync(&lt;span class=&quot;string&quot;&gt;&quot;filename.js&quot;&lt;/span&gt;, options);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-配置-Babel-6&quot;&gt;&lt;a href=&quot;#2-配置-Babel-6&quot; class=&quot;headerlink&quot; title=&quot;2. 配置 Babel 6&quot;&gt;&lt;/a&gt;2. 配置 Babel 6&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//.babelrc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;presets&quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;plugins&quot;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//or package.json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;babel&quot;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;presets&quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  	&quot;plugins&quot;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;presets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;babel-preset-es2015&lt;/li&gt;
&lt;li&gt;babel-preset-react&lt;/li&gt;
&lt;li&gt;babel-preset-stage-x(x=0,1,2,3)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;presets&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;es2015&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;stage-2&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;plugins&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;babel-plugin-transform-es2015-classes&lt;/li&gt;
&lt;li&gt;babel-plugin-transform-es2015-arrow-functions&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;transform-es2015-classes&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;transform-es2015-arrow-functions&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;loose mode&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      //&lt;span class=&quot;string&quot;&gt;&quot;transform-es2015-classes&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;&quot;transform-es2015-classes&quot;&lt;/span&gt;, &amp;#123; &lt;span class=&quot;attr&quot;&gt;&quot;loose&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI3NTE2NjYxNw==&amp;amp;mid=2650600240&amp;amp;idx=1&amp;amp;sn=88f53bf78b5b174acd6805fe7026cd66&amp;amp;scene=1&amp;amp;srcid=0816pFmqA5bQYhJUHdBBMDuq&amp;amp;key=305bc10ec50ec19bea029543ffd48645f5bec6aeefc9ecf044a7e08d510f51dd27c850d970a291e06e17bcfa70f438e0&amp;amp;ascene=0&amp;amp;uin=MTkxMDY2NDA2MQ%3D%3D&amp;amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.5+build(15F34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扩展—— Babel 6 loose&lt;/a&gt;&amp;amp;version=11020201&amp;amp;pass_ticket=eUYpNbnbXM9RBSMCUPMk%2FYHjU3v29WWpWF5gQJ9FeU6LHqIZ0eAx6rz%2FawLCrm9c)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于环境自定义 Babel&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;presets&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;es2015&quot;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;env&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;development&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;production&quot;&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [...]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt; : &lt;code&gt;process.env.BABEL_ENV&lt;/code&gt; or &lt;code&gt;process.env.NODE_env&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-Webpack&quot;&gt;&lt;a href=&quot;#3-Webpack&quot; class=&quot;headerlink&quot; title=&quot;3. Webpack&quot;&gt;&lt;/a&gt;3. Webpack&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//webpack.config.js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            loaders: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    loader: &lt;span class=&quot;string&quot;&gt;&#39;babel-loader&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    test: path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;js&#39;&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    query: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        presets: [&lt;span class=&quot;string&quot;&gt;&#39;es2015&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;tree-shaking&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0-改进&quot;&gt;&lt;a href=&quot;#0-改进&quot; class=&quot;headerlink&quot; title=&quot;0. 改进&quot;&gt;&lt;/a&gt;0. 改进&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模块化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可选的插件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预设&lt;/p&gt;

    
    </summary>
    
      <category term="技术使用" scheme="http://chriscindy.top/categories/%E6%8A%80%E6%9C%AF%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="Babel" scheme="http://chriscindy.top/tags/Babel/"/>
    
  </entry>
  
  <entry>
    <title>swiftype搜索服务更换为Local Serach</title>
    <link href="http://chriscindy.top/2016/08/10/swiftype%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1%E6%9B%B4%E6%8D%A2%E4%B8%BALocal%20Serach/"/>
    <id>http://chriscindy.top/2016/08/10/swiftype搜索服务更换为Local Serach/</id>
    <published>2016-08-10T06:49:15.000Z</published>
    <updated>2016-08-22T10:16:27.000Z</updated>
    
    <content type="html">&lt;p&gt;突然发现博客的搜索服务无法使用，查之发现是因为服务提供商 swiftype 目前已经没有了免费账户的选项，15 天试用期结束后如果不付费将无法继续使用。可以选择的账户类型如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tKfTcjw1f6onlf2wwxj31kw0qgaf1.jpg&quot; alt=&quot;swiftype.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;恕我直言，这是完全不让我们这种小博客用户使用的节奏啊。既然 swiftype 已经无法继续使用，我们只能另寻他路。&lt;/p&gt;
&lt;p&gt;Next 的使用文档在 swiftype 之外提供了两种方案：微搜索和 Local Search。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://tinysou.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微搜索&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国内的一家志在做最好的站内搜索的服务商。截止本文发表时，其官网仍无法注册，进入注册页提示“504 Gateway Time-out”，无奈，放弃。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Local Search&lt;/p&gt;
&lt;p&gt;尝试了一下，还不错，免费，速度堪比 swiftype，Next 定制的外观也还可以，就它了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tKfTcjw1f6oo7rsw3uj319q116aeu.jpg&quot; alt=&quot;localsearch.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;突然发现博客的搜索服务无法使用，查之发现是因为服务提供商 swiftype 目前已经没有了免费账户的选项，15 天试用期结束后如果不付费将无法继续使用。可以选择的账户类型如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006
    
    </summary>
    
      <category term="解决方案" scheme="http://chriscindy.top/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="博客搭建" scheme="http://chriscindy.top/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Babel 6的loose模式</title>
    <link href="http://chriscindy.top/2016/08/10/Babel-6%E7%9A%84loose%E6%A8%A1%E5%BC%8F/"/>
    <id>http://chriscindy.top/2016/08/10/Babel-6的loose模式/</id>
    <published>2016-08-10T06:32:49.000Z</published>
    <updated>2016-08-22T10:14:48.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006tKfTcjw1f6omyfzq3qj31kw0pu7av.jpg&quot; alt=&quot;babel.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h3&gt;&lt;p&gt;Babel 的 loose 模式将 ES6 代码转译成 ES5 代码，loose 模式是不太忠实于 ES6 语义的。这篇文章解释了它是怎么工作的以及它的优点与缺点（剧透：通常是不推荐的）。&lt;/p&gt;
&lt;p&gt;在这之前，我们先简单了解一下 Babel 中的一些基础知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置文件&lt;/p&gt;
&lt;p&gt;Babel 的配置文件是&lt;code&gt;.babelrc&lt;/code&gt;，存放在下项目的根目录下，该文件用来设置预设和插件，基本格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;presets&quot;&lt;/span&gt;:[],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;:[]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;presets（预设）&lt;/p&gt;
&lt;p&gt;为了将 Babel 的输出配置为符合要求的情况，我们需要指定 Babel 使用什么插件。可以指定的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单独的插件&lt;/li&gt;
&lt;li&gt;预设，即支持各种编译方案的插件集合。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是一些使用广泛的预设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;es2015：将 ES6 代码编译为 ES5&lt;/li&gt;
&lt;li&gt;stage-3：将&lt;code&gt;stage 3 ECMAScript proposals&lt;/code&gt;编译为ES5&lt;/li&gt;
&lt;li&gt;react：将 JSX 编译为 JavaScript 并且移除 Flow 的类型注解&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;预设通过 npm 安装。他们在 npm 中的包名称为其名字加上前缀&lt;code&gt;babel-preset-&lt;/code&gt;。比如安装&lt;code&gt;es2015&lt;/code&gt;时，我们可以用以下的命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install babel-preset-es2015&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;plugins（插件）&lt;/p&gt;
&lt;p&gt;笼统地讲，插件是在编译过程中应用到输入中的函数。插件有两种重要的类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;语法插件。其作用为使 Babel 具备处理内建基础语法之外的语法实体。它们能够帮助构造抽象语法树（AST）。典型的语法插件有：&lt;a href=&quot;http://babeljs.io/docs/plugins/syntax-async-functions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;syntax-async-functions&lt;/a&gt; 以及 &lt;a href=&quot;http://babeljs.io/docs/plugins/syntax-jsx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;syntax-jsx&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;转换插件。其作用为修改抽象语法树。典型的转换插件有：&lt;a href=&quot;http://babeljs.io/docs/plugins/transform-async-to-generator/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transform-async-to-generator&lt;/a&gt;、&lt;a href=&quot;http://babeljs.io/docs/plugins/transform-react-jsx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transform-react-jsx&lt;/a&gt;、&lt;a href=&quot;http://babeljs.io/docs/plugins/transform-es2015-arrow-functions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transform-es2015-arrow-functions&lt;/a&gt; 等。&lt;/p&gt;
&lt;p&gt;如果你想编译不包含在基础语法之内的代码，那你将同时需要一个语法插件以及与之相对应的转换插件。不过，每个依赖于语法插件的转换插件都将自动触发该语法插件。&lt;/p&gt;
&lt;p&gt;插件同样通过 npm 安装，他们在 npm 中的包名称为其名字加上前缀&lt;code&gt;babel-plugin-&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装插件&lt;code&gt;syntax-jsx&lt;/code&gt;：&lt;code&gt;npm install babel-plugin-syntax-jsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装插件&lt;code&gt;transform-react-jsx&lt;/code&gt;：&lt;code&gt;npm install babel-plugin-transform-react-jsx&lt;/code&gt;​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OK，基础知识介绍到这里，如想进一步学习 Babel，可以去到&lt;a href=&quot;https://babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel官网&lt;/a&gt;。下面回归主题，探究 Babel 6 的 loose 模式。&lt;/p&gt;
&lt;h3 id=&quot;2-两种模式&quot;&gt;&lt;a href=&quot;#2-两种模式&quot; class=&quot;headerlink&quot; title=&quot;2. 两种模式&quot;&gt;&lt;/a&gt;2. 两种模式&lt;/h3&gt;&lt;p&gt;许多 Babel 的插件有两种模式：&lt;/p&gt;
&lt;h6 id=&quot;•-尽可能符合-ECMAScript6-语义的-normal-模式。&quot;&gt;&lt;a href=&quot;#•-尽可能符合-ECMAScript6-语义的-normal-模式。&quot; class=&quot;headerlink&quot; title=&quot;• 尽可能符合 ECMAScript6 语义的 normal 模式。&quot;&gt;&lt;/a&gt;• 尽可能符合 ECMAScript6 语义的 normal 模式。&lt;/h6&gt;&lt;h6 id=&quot;•-提供更简单-ES5-代码的-loose-模式。&quot;&gt;&lt;a href=&quot;#•-提供更简单-ES5-代码的-loose-模式。&quot; class=&quot;headerlink&quot; title=&quot;• 提供更简单 ES5 代码的 loose 模式。&quot;&gt;&lt;/a&gt;• 提供更简单 ES5 代码的 loose 模式。&lt;/h6&gt;&lt;p&gt;通常，推荐不使用 loose 模式，使用这种模式的优点和缺点是：&lt;/p&gt;
&lt;h6 id=&quot;•-优点：生成的代码可能更快，对老的引擎有更好的兼容性，代码通常更简洁，更加的“ES5化”。&quot;&gt;&lt;a href=&quot;#•-优点：生成的代码可能更快，对老的引擎有更好的兼容性，代码通常更简洁，更加的“ES5化”。&quot; class=&quot;headerlink&quot; title=&quot;• 优点：生成的代码可能更快，对老的引擎有更好的兼容性，代码通常更简洁，更加的“ES5化”。&quot;&gt;&lt;/a&gt;• 优点：生成的代码可能更快，对老的引擎有更好的兼容性，代码通常更简洁，更加的“ES5化”。&lt;/h6&gt;&lt;h6 id=&quot;•-缺点：你是在冒险——随后从转译的-ES6-到原生的-ES6-时你会遇到问题。这个险是很不值得冒的。&quot;&gt;&lt;a href=&quot;#•-缺点：你是在冒险——随后从转译的-ES6-到原生的-ES6-时你会遇到问题。这个险是很不值得冒的。&quot; class=&quot;headerlink&quot; title=&quot;• 缺点：你是在冒险——随后从转译的 ES6 到原生的 ES6 时你会遇到问题。这个险是很不值得冒的。&quot;&gt;&lt;/a&gt;• 缺点：你是在冒险——随后从转译的 ES6 到原生的 ES6 时你会遇到问题。这个险是很不值得冒的。&lt;/h6&gt;&lt;h4 id=&quot;2-1-切换到-loose-模式&quot;&gt;&lt;a href=&quot;#2-1-切换到-loose-模式&quot; class=&quot;headerlink&quot; title=&quot;2.1 切换到 loose 模式&quot;&gt;&lt;/a&gt;2.1 切换到 loose 模式&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/bkonkle/babel-preset-es2015-loose&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es2015-loose&lt;/a&gt; 是标准的 ES6 预设（preset）es2015 的 loose 版。&lt;a href=&quot;https://github.com/bkonkle/babel-preset-es2015-loose/blob/master/index.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个预设的代码&lt;/a&gt;对什么样的插件有 loose 模式以及怎样开启提供了很好的说明。以下是代码截选：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    plugins: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-plugin-transform-es2015-classes&quot;&lt;/span&gt;), &amp;#123;loose: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-plugin-transform-es2015-object-super&quot;&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是一个 CommonJS 模块，可以使用任何的 ECMAScript 5，如果你通过&lt;code&gt;.babelrc&lt;/code&gt; 或者&lt;code&gt;package.json&lt;/code&gt;配置 babel（&lt;a href=&quot;http://www.2ality.com/2015/11/configuring-babel6.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详细配置&lt;/a&gt;），你需要使用 JSON。也可以包含 preset：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &quot;presets&quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;es2015-loose&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ···&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以单独引入插件：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &quot;plugins&quot;: [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&quot;transform-es2015-classes&quot;, &amp;#123;loose: true&amp;#125;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &quot;transform-es2015-object-super&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ···&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ···&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-例子：normal-模式与-loose-模式的输出&quot;&gt;&lt;a href=&quot;#3-例子：normal-模式与-loose-模式的输出&quot; class=&quot;headerlink&quot; title=&quot;3. 例子：normal 模式与 loose 模式的输出&quot;&gt;&lt;/a&gt;3. 例子：normal 模式与 loose 模式的输出&lt;/h3&gt;&lt;p&gt;让我们看看模式如何影响下面代码的编译：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Point&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;(x, y) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x = x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.y = y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    toString() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`(&lt;span class=&quot;subst&quot;&gt;$&amp;#123;this.x&amp;#125;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;$&amp;#123;this.y&amp;#125;&lt;/span&gt;)`&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-1-normal-模式&quot;&gt;&lt;a href=&quot;#3-1-normal-模式&quot; class=&quot;headerlink&quot; title=&quot;3.1 normal 模式&quot;&gt;&lt;/a&gt;3.1 normal 模式&lt;/h4&gt;&lt;p&gt;在 normal 模式下，类的 prototype 方法是通过&lt;code&gt;Object.defineProperty&lt;/code&gt;添加的（第 A 行），来确保它们是不可以被枚举的，这是 ES6 规范所要求的。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _createClass = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;defineProperties&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;target, props&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; props.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; descriptor = props[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                descriptor.enumerable = descriptor.enumerable || &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                descriptor.configurable = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; descriptor) descriptor.writable = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(target, descriptor.key, descriptor);   &lt;span class=&quot;comment&quot;&gt;// (A)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;Constructor, protoProps, staticProps&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (protoProps) defineProperties(Constructor.prototype, protoProps);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (staticProps) defineProperties(Constructor, staticProps);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Constructor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_classCallCheck&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;instance, Constructor&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(instance &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Constructor)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;TypeError&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Cannot call a class as a function&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Point = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _classCallCheck(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, Point);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x = x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.y = y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _createClass(Point, [&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            key: &lt;span class=&quot;string&quot;&gt;&quot;toString&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x + &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.y + &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Point;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-2-loose-模式&quot;&gt;&lt;a href=&quot;#3-2-loose-模式&quot; class=&quot;headerlink&quot; title=&quot;3.2 loose 模式&quot;&gt;&lt;/a&gt;3.2 loose 模式&lt;/h4&gt;&lt;p&gt;在 loose 模式下，用通常的赋值方式添加方法（第 B 行），这种风格更像你用 ES5 手动编写代码。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt; &quot;use strict&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_classCallCheck&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;instance, Constructor&lt;/span&gt;) &lt;/span&gt;&amp;#123; ··· &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Point = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _classCallCheck(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, Point);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x = x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.y = y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Point.prototype.toString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;   &lt;span class=&quot;comment&quot;&gt;// (B)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x + &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.y + &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Point;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考文献：&lt;/p&gt;
&lt;blockquote&gt;&lt;footer&gt;&lt;strong&gt;wd4blue&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://www.w3ctech.com/topic/1708?utm_source=tuicool&amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel 6: loose 模式&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;footer&gt;&lt;strong&gt;2ality&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://www.2ality.com/2015/11/configuring-babel6.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Configuring Babel 6&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006tKfTcjw1f6omyfzq3qj31kw0pu7av.jpg&quot; alt=&quot;babel.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;hea
    
    </summary>
    
      <category term="技术研究" scheme="http://chriscindy.top/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Babel" scheme="http://chriscindy.top/tags/Babel/"/>
    
  </entry>
  
  <entry>
    <title>Riot.js特性一览</title>
    <link href="http://chriscindy.top/2016/07/29/Riot-js%E7%89%B9%E6%80%A7%E4%B8%80%E8%A7%88/"/>
    <id>http://chriscindy.top/2016/07/29/Riot-js特性一览/</id>
    <published>2016-07-29T08:11:36.000Z</published>
    <updated>2016-08-22T10:18:59.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;注：本文基于Riot.js v2.5.0版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Riot-js简介&quot;&gt;&lt;a href=&quot;#Riot-js简介&quot; class=&quot;headerlink&quot; title=&quot;Riot.js简介&quot;&gt;&lt;/a&gt;Riot.js简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;类似 React 的 &lt;strong&gt;微型&lt;/strong&gt; UI 库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义标签/虚拟 DOM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;适合编写独立组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MVP 架构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwjw1f69ltjvz8mj30jg042jrh.jpg&quot; alt=&quot;MVP 架构图&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持 IE9+ ？？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-自定义标签&quot;&gt;&lt;a href=&quot;#1-自定义标签&quot; class=&quot;headerlink&quot; title=&quot;1.自定义标签&quot;&gt;&lt;/a&gt;1.自定义标签&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;布局与逻辑耦合，可重用组件&lt;/li&gt;
&lt;li&gt;实际上的语法糖—&amp;gt;编译为 JS&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虚拟 DOM&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单向的数据传输： update 或 unmount 都是从 父亲-&amp;gt;孩子&lt;/li&gt;
&lt;li&gt;预编译和缓存表达式，解析更加高效&lt;/li&gt;
&lt;li&gt;预处理器&lt;/li&gt;
&lt;li&gt;可用于服务器端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;语法友好&lt;ul&gt;
&lt;li&gt;强大的属性缩写: class={enable: true, hidden: false}&lt;/li&gt;
&lt;li&gt;不需要额外的手动绑定，无需记忆 render，state，constructor 等&lt;/li&gt;
&lt;li&gt;可插值使用: Add #{items.length + 1} 或 class=”item {selectd: true}”&lt;/li&gt;
&lt;li&gt;逻辑代码，可不放在 script 标签内&lt;/li&gt;
&lt;li&gt;可使用部分 ES6（完全使用需结合 Babel）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;2-mixin&quot;&gt;&lt;a href=&quot;#2-mixin&quot; class=&quot;headerlink&quot; title=&quot;2.mixin&quot;&gt;&lt;/a&gt;2.mixin&lt;/h2&gt;&lt;p&gt;Mixin 可以将公共代码在不同标签之间方便地共享，可以混入 Object 和 new function(){}。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; OptsMixin = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    init: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.on(&lt;span class=&quot;string&quot;&gt;&#39;updated&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Updated!&#39;&lt;/span&gt;) &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    getOpts: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.opts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    setOpts: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;opts, update&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.opts = opts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!update) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.update()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;my-tag&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;h1&amp;gt;&amp;#123; opts.title &amp;#125;&amp;lt;/h1&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mixin(OptsMixin)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/my-tag&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;声明式 mixin 可在文件之间和项目之间共享 mixin：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;riot.mixin(&lt;span class=&quot;string&quot;&gt;&quot;defaultData&quot;&lt;/span&gt;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    author: &lt;span class=&quot;string&quot;&gt;&quot;ddfe&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    email: &lt;span class=&quot;string&quot;&gt;&quot;shield@didichuxing.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// in custom tag&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mixin(&lt;span class=&quot;string&quot;&gt;&quot;defaultData&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-事件&quot;&gt;&lt;a href=&quot;#3-事件&quot; class=&quot;headerlink&quot; title=&quot;3.事件&quot;&gt;&lt;/a&gt;3.事件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;自定义标签创建过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建标签实例&lt;/li&gt;
&lt;li&gt;标签定义中的 JavaScript 被执行&lt;/li&gt;
&lt;li&gt;HTML 中的表达式被首次计算并首次触发 “update” 事件&lt;/li&gt;
&lt;li&gt;标签被加载 (mount) 到页面上，触发 “mount” 事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;监听生命周期事件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;before-mount &lt;/li&gt;
&lt;li&gt;mount&lt;/li&gt;
&lt;li&gt;update（改写上下文数据）&lt;/li&gt;
&lt;li&gt;updated（操作 DOM）&lt;/li&gt;
&lt;li&gt;before-mount&lt;/li&gt;
&lt;li&gt;unmount&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表达式更新方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当一个事件处理器被调用后自动更新。可以在事件处理器中设置 &lt;code&gt;e.preventUpdate = true&lt;/code&gt; 来禁止这种行为。&lt;/li&gt;
&lt;li&gt;当前标签实例的 &lt;code&gt;this.update()&lt;/code&gt; 方法被调用时&lt;/li&gt;
&lt;li&gt;当前标签的任何一个祖先的 &lt;code&gt;this.update()&lt;/code&gt; 被调用时. 更新从父亲到儿子单向传播。&lt;/li&gt;
&lt;li&gt;当 &lt;code&gt;riot.update()&lt;/code&gt; 方法被调用时, 会更新页面上所有的表达式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-表达式&quot;&gt;&lt;a href=&quot;#4-表达式&quot; class=&quot;headerlink&quot; title=&quot;4.表达式&quot;&gt;&lt;/a&gt;4.表达式&lt;/h2&gt;&lt;p&gt;100%纯 JavaScript：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; title || &lt;span class=&quot;string&quot;&gt;&#39;Untitled&#39;&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; results ? &lt;span class=&quot;string&quot;&gt;&#39;ready&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;loading&#39;&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;() &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; message.length &amp;gt; &lt;span class=&quot;number&quot;&gt;140&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&#39;Message is too long&#39;&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(rating) &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可放在 html 节点中，也可作为文本节点嵌入：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#123;&lt;/span&gt; /* 属性表达式 */ &amp;#125;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123; /* 嵌入表达式 */ &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注：可通过&lt;code&gt;riot.settings.brackets&lt;/code&gt;自定义花括号&lt;/p&gt;
&lt;h2 id=&quot;5-杂烩&quot;&gt;&lt;a href=&quot;#5-杂烩&quot; class=&quot;headerlink&quot; title=&quot;5.杂烩&quot;&gt;&lt;/a&gt;5.杂烩&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;嵌套标签&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;account&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;subscription&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;plan&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;opts.plan&lt;/span&gt; &amp;#125; &lt;span class=&quot;attr&quot;&gt;show_details&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;account&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;subscription&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123; opts.plan.name &amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 取得标签选项&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; plan = opts.plan,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      show_details = opts.show_details&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 访问父标签实例&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parent = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.parent&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/subscription&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;父标签的参数通过 &lt;code&gt;riot.mount&lt;/code&gt; 方法的参数设置，而子标签的选项通过标签属性来传递。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.mount(&lt;span class=&quot;string&quot;&gt;&#39;account&#39;&lt;/span&gt;, &amp;#123; plan: &amp;#123; name: &lt;span class=&quot;string&quot;&gt;&#39;ddfe&#39;&lt;/span&gt;, age: &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt; &amp;#125; &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌套HTML&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--definition--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;yield&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  this.text = &#39;world&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--apply--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123; text &amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--result--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;world&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;my-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;带有 &lt;code&gt;name&lt;/code&gt; 或 &lt;code&gt;id&lt;/code&gt; 属性的 DOM 元素将自动被绑定到上下文中，可直接访问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事件处理器 &lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;login&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;form onsubmit=&amp;#123; submit &amp;#125;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/form&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // 上面的表单提交时调用此方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  submit(e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/login&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//e.currentTarget 事件处理器的所属元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//e.target 发起事件的元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//e.which 键盘事件中的键值 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//e.item 循环中的当前元素&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;渲染条件：&lt;code&gt;if = {expression}&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; &lt;code&gt;hide&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;循环：&lt;code&gt;each = {items}&lt;/code&gt;（对象数组）or &lt;code&gt;each = {name, i in items}&lt;/code&gt;(非对象数组) or &lt;code&gt;each = {name,value in items}&lt;/code&gt;（对象）（不建议使用）&lt;/p&gt;
&lt;p&gt;循环中的每一项将建立一个新的上下文，子标签通过 parent 访问父标签定义的方法和属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用标准 HTML 元素作为标签&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;ul riot-tag=&lt;span class=&quot;string&quot;&gt;&quot;my-tag&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.mount(&lt;span class=&quot;string&quot;&gt;&#39;my-tag&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务端渲染&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; riot = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;riot&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timer = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;timer.tag&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; html = riot.render(timer, &amp;#123; start: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt; &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(html) &lt;span class=&quot;comment&quot;&gt;// &amp;lt;timer&amp;gt;&amp;lt;p&amp;gt;Seconds Elapsed: 42&amp;lt;/p&amp;gt;&amp;lt;/timer&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-编译&quot;&gt;&lt;a href=&quot;#6-编译&quot; class=&quot;headerlink&quot; title=&quot;6. 编译&quot;&gt;&lt;/a&gt;6. 编译&lt;/h2&gt;&lt;p&gt;自定义标签会被编译为 JavaScript&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;浏览器内编译&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;todo.tag&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;riot/tag&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预编译：riot 命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install riot -g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 编译到当前目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot some.tag&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 编译到目标目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot some.tag some_folder&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 编译到目标路径&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot some.tag some_folder/some.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 将源目录下的所有文件编译至目的目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot some/folder path/to/dist&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 将源目录下的所有文件编译（合并）到单个js文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot some/folder all-my-tags.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;参数：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-w watch 目录 有变化自动编译&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-ext html 指定后缀名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--config config 使用config.js作配置文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--type 指定 js 处理器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--template 指定 HTML 模板&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预处理器&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;coffee&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-观察者-Observable（事件触发器）&quot;&gt;&lt;a href=&quot;#7-观察者-Observable（事件触发器）&quot; class=&quot;headerlink&quot; title=&quot;7.观察者 Observable（事件触发器）&quot;&gt;&lt;/a&gt;7.观察者 Observable（事件触发器）&lt;/h2&gt;&lt;p&gt;Riot 提供 Observable 以便组件间通信，实现模块化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 方法1，创建一个观察者，返回一个实例，之后该对象便可以触发和监听事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ddfe = riot.observable(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法2，使 ddfe 成为观察者&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.observable(ddfe);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 监听事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.on(&lt;span class=&quot;string&quot;&gt;&quot;event1&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data1, data2&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 监听event1事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// data1 和 data2 是trigger传入的参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// data1 = 1, data2 = 2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(data1, data2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 发布一个事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 该事件带有 1 和 2 作为参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 上面的on(&quot;event1&quot;)的回调fn将会执行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.trigger(&lt;span class=&quot;string&quot;&gt;&quot;event1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 解除 event1 的所有监听，第二个参数可选&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果有第二个参数 [function]，则只解绑该函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.off(&lt;span class=&quot;string&quot;&gt;&quot;event1&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// one 与 on 类似，只是 one 如果执行过一次，就自动解除绑定&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.one(&lt;span class=&quot;string&quot;&gt;&quot;event1&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data1&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(data1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.trigger(&lt;span class=&quot;string&quot;&gt;&quot;event1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//删除所有事件的所有监听器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.off(&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对所有的事件删除指定的回调函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ddfe.off(&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;,fn)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;8-路由&quot;&gt;&lt;a href=&quot;#8-路由&quot; class=&quot;headerlink&quot; title=&quot;8.路由&quot;&gt;&lt;/a&gt;8.路由&lt;/h2&gt;&lt;p&gt;一个最小化的路由器实现&lt;/p&gt;
&lt;p&gt;功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改 URL 的 hash 部分&lt;/li&gt;
&lt;li&gt;hash 变化时进行通知&lt;/li&gt;
&lt;li&gt;查看当前 hash&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route(callback)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;collection, id, action&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//如果 url 变为 customers/987987/edit,则&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//collection = &#39;customers&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//id = &#39;987987&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//action = &#39;edit&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route(filter, callback)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 精确匹配 `/fruit`&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/fruit&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;The list of fruits&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果 url 变成 `/blog/2015-09/01`,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 回调的参数将被捕捉成 &#39;2015&#39;, &#39;09&#39; 和 &#39;01&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/blog/*-*/*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;year, month, date&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;The page of &#39;&lt;/span&gt; + year + &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; + month + &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; date)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.create()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回一个新的路由上下文&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;first-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;First tag&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; subRoute = riot.route.create() &lt;span class=&quot;comment&quot;&gt;// 创建新的路由上下文&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    subRoute(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* 公用的部分 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;first-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;second-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Second tag&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; subRoute = riot.route.create() &lt;span class=&quot;comment&quot;&gt;// 创建新的路由上下文&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    subRoute(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/apple&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* 个别的部分 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;second-tag&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route(to[, title, shouldReplace])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 在内部实现中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有 &lt;code&gt;shouldReplace&lt;/code&gt;, 将使用 &lt;code&gt;history.pushState()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;如果有 &lt;code&gt;shouldReplace&lt;/code&gt;, 将使用&lt;code&gt;history.replaceState()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.start()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开始监听路由变化，需要手动调用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.start(autoExec)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;riot.route.start(true) &amp;lt;=&amp;gt; riot.route.start()+riot.route.exec()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.stop()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.query()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果 url 变成 `/search?keyword=Apple&amp;amp;limit=30` 将会匹配&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/search..&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; q = riot.route.query()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Search keyword: &#39;&lt;/span&gt; + q.keyword)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Search limit: &#39;&lt;/span&gt; + q.limit)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.base(base)&lt;/code&gt;修改基础路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;riot.route.parser(parser[, secondParser])&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他，路由优先级等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/apple&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-B (1)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/orange&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-C (2)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-A (3)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-X (3)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/fruit/*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-Y (1)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;riot.route(&lt;span class=&quot;string&quot;&gt;&#39;/sweet/*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* */&lt;/span&gt; &amp;#125;) &lt;span class=&quot;comment&quot;&gt;// 路由-Z (2)&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;注：本文基于Riot.js v2.5.0版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Riot-js简介&quot;&gt;&lt;a href=&quot;#Riot-js简介&quot; class=&quot;headerlink&quot; title=&quot;Riot.js简介&quot;&gt;&lt;/a&gt;Ri
    
    </summary>
    
      <category term="理论学习" scheme="http://chriscindy.top/categories/%E7%90%86%E8%AE%BA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Riot.js" scheme="http://chriscindy.top/tags/Riot-js/"/>
    
  </entry>
  
  <entry>
    <title>跨域请求时多出现一条OPTIONS请求的原因及解决办法</title>
    <link href="http://chriscindy.top/2016/07/20/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E6%97%B6%E5%A4%9A%E5%87%BA%E7%8E%B0%E4%B8%80%E6%9D%A1options%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://chriscindy.top/2016/07/20/跨域请求时多出现一条options请求的原因及解决办法/</id>
    <published>2016-07-20T10:19:34.000Z</published>
    <updated>2016-08-22T09:48:41.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在公司项目中与后端联调时遇到了一个很奇怪的问题，前端发出的 DELETE 方法的 Ajax 请求传到服务端就变成了 OPTIONS 请求。由于服务端没有针对 OPTIONS 请求作回应，此时返回的 http 状态码为 405，意为“方法不被允许”（Method not allowed），DELETE 请求自然也是失败。上网查了一番，原理是触发了 W3C 规定的跨域请求时的安全机制。&lt;/p&gt;
&lt;p&gt;W3C 规范中的定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To protect resources against cross-origin requests that could not originate from certain user agents before this specification existed a preflight request is made to ensure that the resource is aware of this specification. The result of this request is stored in a preflight result cache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大意就是出于安全考虑，保护资源不接受来自特定客户端的跨域请求，存在预请求来提前通知资源。而具体做法呢？看下面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It gets slightly more complicated if the resource author wants to be able to handle cross-origin requests using methods other than simple methods. In that case the author needs to reply to a preflight request that uses the OPTIONS method and then needs to handle the actual request that uses the desired method (DELETE in this example) and give an appropriate response.&lt;br&gt;服务端想要处理使用简单方法之外的方法进行的跨域请求时，需要对使用OPTIONS方法的预请求进行响应，然后才能处理实际请求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所谓简单方法，是指：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只使用 GET, HEAD 或者 POST 请求方法。如果使用 POST 向服务器端传送数据，则数据类型(Content-Type)只能是 application/x-www-form-urlencoded, multipart/form-data 或 text/plain中的一种。&lt;/li&gt;
&lt;li&gt;不会使用自定义请求头（类似于 X-Modified 这种）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OPTIONS 是 HTTP/1.1 里的方法，用来获取更多服务器端的信息，是一个不应该对服务器数据造成影响的方法。通过这个方法，客户端可以在采取具体资源请求之前，决定对该资源采取何种必要措施，或者了解服务器的性能。&lt;/p&gt;
&lt;p&gt;到这里，我们对整个情况就很明了了：当 Ajax 跨域请求时，如果 HTTP 方法是非简单方法，则客户端即浏览器会发出 OPTIONS 方法的预请求去询问服务端，在得到允许性质的回应后，才会发送真正的请求；如果服务端对预请求拒绝，则真正的 DELETE 请求等不会发出。&lt;/p&gt;
&lt;p&gt;看到这里，相信各位也知道如何解决该问题了：服务端对 OPTIONS 预请求给出允许回应。不过，需要注意的是，不应该满足所有的 OPTIONS 请求，否则这一安全措施便形同虚设了。最好是建立一套验证机制，对符合条件的客户端请求给出允许回应。至于如何实现，就靠我们的后端小伙伴啦。有兴趣的朋友可以查看 MDN 上的这篇文档：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP访问控制(CORS)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其他参考文献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/cors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C Cross-Origin Resource Sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tangshuang.net/2271.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jquery ajax 请求中多出现一次 OPTIONS 请求及其解决办法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在公司项目中与后端联调时遇到了一个很奇怪的问题，前端发出的 DELETE 方法的 Ajax 请求传到服务端就变成了 OPTIONS 请求。由于服务端没有针对 OPTIONS 请求作回应，此时返回的 http 状态码为 405，意为“方法不被允许”（Method not 
    
    </summary>
    
      <category term="解决方案" scheme="http://chriscindy.top/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="Ajax" scheme="http://chriscindy.top/tags/Ajax/"/>
    
      <category term="HTTP" scheme="http://chriscindy.top/tags/HTTP/"/>
    
      <category term="CORS" scheme="http://chriscindy.top/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>[译]使用Riot，ES6和Webpack构建应用</title>
    <link href="http://chriscindy.top/2016/07/11/%E8%AF%91-%E4%BD%BF%E7%94%A8Riot%EF%BC%8CES6%E5%92%8CWebpack%E6%9E%84%E5%BB%BA%E5%BA%94%E7%94%A8/"/>
    <id>http://chriscindy.top/2016/07/11/译-使用Riot，ES6和Webpack构建应用/</id>
    <published>2016-07-11T03:10:52.000Z</published>
    <updated>2016-08-22T10:03:38.000Z</updated>
    
    <content type="html">&lt;p&gt;在读完 Muut 上 &lt;a href=&quot;https://muut.com/blog/technology/frameworkless-javascript.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Frameworkless JavaScript&lt;/a&gt; 这篇博文后，我遇上了 &lt;a href=&quot;http://riotjs.com/zh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Riot&lt;/a&gt;，请一定先阅读该博文！Muut 的程序员拿出实际行动编写了 &lt;a href=&quot;http://riotjs.com/zh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Riot&lt;/a&gt;，一个 &lt;a href=&quot;https://muut.com/blog/technology/riot-2.0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;类似React&lt;/a&gt; 的用来构建响应式UI组件的微型库。&lt;/p&gt;
&lt;p&gt;阅读Riot的文档时，令我感触最深的是 Riot 竟如此容易理解——相比 React 来说，在 Riot 里需要学习的术语和概念极少（说实话，和 Polymer 和 Angular 等比起来，Riot 也是十分简单易懂的）。&lt;/p&gt;
&lt;p&gt;为了有助于学习 Riot，我把自己用 React 编写的 &lt;a href=&quot;https://github.com/srackham/flux-backbone-todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flux-backbone-todo&lt;/a&gt; 搬运到了用 Riot 编写的 &lt;a href=&quot;https://github.com/srackham/riot-todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Riot Todo app&lt;/a&gt; 上。这篇博文就是我记录这次重构经历的笔记的合集。&lt;/p&gt;
&lt;p&gt;如果觉得文章太长，这里是精简版：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Riot 确实践行了它最小化的座右铭。Todo 应用的 Riot 版本（未压缩）只有很小的 32 KB。作为对比，React 版本则达到了 964 KB 之多（即使减去在 Riot 版本中未使用到的 Backbone 和 jQuery，React 版本仍然有 600 KB）。不管你怎么看，这都是一个巨大的差异。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Riot 有那种很少见的“刚刚好”的感觉，使用起来非常愉悦。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Riot 是一个相对较新的方案，因此我没有找到其在大一些的项目中的性能方面的统计数据。在大型项目中 Riot 表现究竟怎样尚未有定论，我希望它能够做的很好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你对 Riot 还不熟悉，可以先去浏览一下 &lt;a href=&quot;http://riotjs.com/zh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Riot官网&lt;/a&gt;——开发文档是第一课。我将列出一些我所学到的但是阅读文档时不一定很明显易懂的内容，而不会去讨论 Riot 是如何工作的。&lt;/p&gt;
&lt;h2 id=&quot;在-Riot-中使用-ES6&quot;&gt;&lt;a href=&quot;#在-Riot-中使用-ES6&quot; class=&quot;headerlink&quot; title=&quot;在 Riot 中使用 ES6&quot;&gt;&lt;/a&gt;在 Riot 中使用 ES6&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/srackham/riot-todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例的应用&lt;/a&gt;采用 ES6 编写，我使用 &lt;a href=&quot;http://6to5.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;6to5&lt;/a&gt; 转译器将其转换为 ES5 代码，使用 &lt;a href=&quot;http://webpack.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack&lt;/a&gt; 将编译后的代码以及需要的库一起打包。这种方式使得联结 JavaScript 模块成为必要——当你理解最新的 ES6 中 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 表述的优势时（看这个&lt;a href=&quot;https://github.com/srackham/riot-todo/blob/master/src/index.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例&lt;/a&gt;），你就会知道使用 ES6 编写代码是非常棒的。&lt;/p&gt;
&lt;p&gt;Webpack通过&lt;a href=&quot;https://github.com/srackham/riot-todo/blob/master/webpack.config.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;配置&lt;/a&gt;可以使用 &lt;code&gt;6to5 loader&lt;/code&gt; 将 ES6 源码自动转换成 CommonJS 格式的 ES5 模块，再将其打包至一个单独的 &lt;code&gt;bundle.js&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h2 id=&quot;为什么我不使用-Riot-的-tag-文件&quot;&gt;&lt;a href=&quot;#为什么我不使用-Riot-的-tag-文件&quot; class=&quot;headerlink&quot; title=&quot;为什么我不使用 Riot 的 .tag 文件&quot;&gt;&lt;/a&gt;为什么我不使用 Riot 的 &lt;code&gt;.tag&lt;/code&gt; 文件&lt;/h2&gt;&lt;p&gt;Riot 标签文件是指包含 HTML 标记以及 JavaScript UI 逻辑的 HTML 模板。如果你已经浏览过了上面提到的 &lt;a href=&quot;https://github.com/srackham/riot-todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Todo应用&lt;/a&gt;，你可能会疑惑标签文件在哪里——答案是我已经不再使用它们，并且更喜欢用 JavaScript 来替代之。去除 &lt;code&gt;.tag&lt;/code&gt; 文件简化了我的编码、加工和工作流程。对我来说，标签文件的复杂性和局限性大于它任何可以感知到的优点。&lt;/p&gt;
&lt;p&gt;这并不是对 Riot 的一种批判。对标签文件来说，灵活的地方在于它完全可选而非强制使用，在此记录我不使用它的原因。&lt;/p&gt;
&lt;p&gt;当你审视编译后的 JavaScript 代码时，你会看到 Riot 标签文件其实是一层轻微的语法糖.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它添加了额外的概念层——新的或者比较新的语法和语义需要学习。&lt;/li&gt;
&lt;li&gt;它添加了额外的编译步骤。&lt;/li&gt;
&lt;li&gt;标签文件编译器指定了你可以使用的语言和模板（CoffeeScript、ES6和Jade），这有悖于“使用你最喜欢的工具”的理念。&lt;/li&gt;
&lt;li&gt;标签构造主体的逻辑脱离上下文：&lt;ul&gt;
&lt;li&gt;这使得标签文件无法被编辑器/IDE 的代码检测以及其他的工具处理&lt;/li&gt;
&lt;li&gt;涉及 &lt;code&gt;this&lt;/code&gt; 时，脱离上下文意味着代码不是合法的 JavaScript 并且在编辑器/IDE 中会报错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;目前没有对模块化（CommonJS，AMD）标签文件编译为普通 JavaScript 的支持。&lt;/li&gt;
&lt;li&gt;标签文件需要构建工具（比如 Webpack 和 Browserify）直接使用标签转换器来进行转换。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类似 ES6 的构造方法很棒但它们不是合法的 JavaScript 并且很可能总是成为持续混乱（语法和语义上）的来源。你可以使用 ES6 的&lt;em&gt;箭头函数&lt;/em&gt;以几乎相同的简洁程度来获得相同的语义（拥有词法作用域的 &lt;code&gt;this&lt;/code&gt;），举例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.add = (e) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; input = e.target[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.items.push(input.value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	input.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里有一个使用 ES6 模板字符串和箭头函数的 ES6 形式的 JavaScript 标签文件的&lt;a href=&quot;https://github.com/srackham/riot-todo/blob/0.1.1/src/tags.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;ES6 模板字符串提高了标签 HTML 模板的可读性。相似的，如果你使用的是 CoffeeScript，那么你可以使用 CoffeeScript 块字符串。&lt;a href=&quot;http://facebook.github.io/jsx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSX&lt;/a&gt; 是另一种可选项——React 的 JSX 转换器可以经过修改然后生成字符串文本，这样你就可以获得现有的 JSX 工具的支持。&lt;/p&gt;
&lt;h2 id=&quot;Riot和React的基本区别&quot;&gt;&lt;a href=&quot;#Riot和React的基本区别&quot; class=&quot;headerlink&quot; title=&quot;Riot和React的基本区别&quot;&gt;&lt;/a&gt;Riot和React的基本区别&lt;/h2&gt;&lt;p&gt;最重要的区别在于 UI 标记模板是如何声明的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 React 中 UI 标记模板是在你的 JavaScript 源码中生成的（使用 JSX 语言的扩展）。&lt;/li&gt;
&lt;li&gt;Riot 则反转了 React 的模型，将标记和逻辑都放在 HTML（标签）文件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种反转的结果是 React 模板 DSL（领域特定语言）就是 JavaScript，而 Riot 依赖自定义的模板 DSL（采用自定义标签实现）。下面是两个简化的从一个 todo 事项的数组中生成一个列表的例子，第一个采用 React JavaScript编写，第二个是等价的 Riot 标签标记形式：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  todos.map(todo =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TodoItemComponent&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;todo&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;#123;todo&amp;#125;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;each&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;todo in todos&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;todo-item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;todo&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;todo&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个例子中使用了 JavaScript 的 &lt;code&gt;map&lt;/code&gt; 函数来生成一个 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素的列表；第二个例子则使用了 Riot 自定义的 &lt;code&gt;each&lt;/code&gt; 模板属性。&lt;/p&gt;
&lt;p&gt;Steve Luscher 在这个&lt;a href=&quot;https://www.youtube.com/watch?v=rI0GQc__0SM#t=1325&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;的结尾解释了为何他认为 JavaScript 比自定义模板 DSL 更优秀——你不仅需要学习一门自定义的 DSL，而且还要拘泥于这套 DSL 提供的特性的束缚。对于像上面这样较小的普通用例来说，两种方式其实没太多选择余地，但是在编写更大的高度动态化的 UI 组件时，React 的 JavaScript 方式的威力和灵活性就明显更优越了。&lt;/p&gt;
&lt;h2 id=&quot;小贴士&quot;&gt;&lt;a href=&quot;#小贴士&quot; class=&quot;headerlink&quot; title=&quot;小贴士&quot;&gt;&lt;/a&gt;小贴士&lt;/h2&gt;&lt;h3 id=&quot;避免自关闭的XHTML风格的标签&quot;&gt;&lt;a href=&quot;#避免自关闭的XHTML风格的标签&quot; class=&quot;headerlink&quot; title=&quot;避免自关闭的XHTML风格的标签&quot;&gt;&lt;/a&gt;避免自关闭的XHTML风格的标签&lt;/h3&gt;&lt;p&gt;不要用&lt;code&gt;/&amp;gt;&lt;/code&gt;来关闭标签，因为它不总是立刻就能关闭标签。当以 HTML5 元素对待时，&lt;code&gt;&amp;lt;foo /&amp;gt;&lt;/code&gt; 表示&lt;code&gt;&amp;lt;foo&amp;gt;&lt;/code&gt;（然而在 XHTML 中&lt;code&gt;&amp;lt;foo /&amp;gt;&lt;/code&gt;表示&lt;code&gt;&amp;lt;foo&amp;gt;&amp;lt;/foo&amp;gt;&lt;/code&gt;），换言之，HTML5 会忽略&lt;code&gt;/&lt;/code&gt;字符。有关这个话题可以在 &lt;a href=&quot;http://stackoverflow.com/questions/9845011/are-custom-elements-valid-html5/9845124#9845124&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stackoverflow&lt;/a&gt; 上查看更多讨论。还可以查看下面两处内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://riotjs.com/forum/#!/using:closing-html5-tags-with-&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用&lt;code&gt;/&amp;gt;&lt;/code&gt;关闭HTML5标签可能造成无法预料的结果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://riotjs.com/forum/#!/using:misplaced-form-end-tag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;放错位置的表单结束标签&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;绑定标签事件处理器到-this-上&quot;&gt;&lt;a href=&quot;#绑定标签事件处理器到-this-上&quot; class=&quot;headerlink&quot; title=&quot;绑定标签事件处理器到 this 上&quot;&gt;&lt;/a&gt;绑定标签事件处理器到 this 上&lt;/h3&gt;&lt;p&gt;绑定标签事件处理器到 this 上，以确保这些处理器总是和标签文本一起清除（可选的方式是使用约定俗成的&lt;code&gt;var self = this&lt;/code&gt;）。比如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clear = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  dispatcher.trigger(dispatcher.CLEAR_TODOS);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 ES6 中的词法作用域绑定的箭头函数也可以获得相同的效果：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clear = (e) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  dispatcher.trigger(dispatcher.CLEAR_TODOS);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关于循环项&quot;&gt;&lt;a href=&quot;#关于循环项&quot; class=&quot;headerlink&quot; title=&quot;关于循环项&quot;&gt;&lt;/a&gt;关于循环项&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;each={item in items}&lt;/code&gt;结构将当前的循环项目传递给自定义的子标签。在下面的例子中，自定义的&lt;code&gt;todo-item&lt;/code&gt;标签内的代码可以使用&lt;code&gt;opts.todo&lt;/code&gt;来获取当前的 todo 项：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;each&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;todo in opts.store.todos&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;todo-item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;store&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;parent.opts.store&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;todo&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;todo&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;命名空间事件名称&quot;&gt;&lt;a href=&quot;#命名空间事件名称&quot; class=&quot;headerlink&quot; title=&quot;命名空间事件名称&quot;&gt;&lt;/a&gt;命名空间事件名称&lt;/h3&gt;&lt;p&gt;使用命名空间加冒号的约定来组织应用的事件名称，比如&lt;code&gt;admin:edit&lt;/code&gt;，&lt;code&gt;admin:delete&lt;/code&gt;，&lt;code&gt;admin:new&lt;/code&gt;等。&lt;/p&gt;
&lt;h3 id=&quot;可以在-CSS-文件中使用自定义标签&quot;&gt;&lt;a href=&quot;#可以在-CSS-文件中使用自定义标签&quot; class=&quot;headerlink&quot; title=&quot;可以在 CSS 文件中使用自定义标签&quot;&gt;&lt;/a&gt;可以在 CSS 文件中使用自定义标签&lt;/h3&gt;&lt;p&gt;自定义标签最终会被渲染生成到 DOM 中，因此它们可以使用在 CSS 选择器和 DOM 审查中使用，这里是一个&lt;a href=&quot;https://github.com/srackham/riot-todo/blob/master/dist/index.css&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;调试&quot;&gt;&lt;a href=&quot;#调试&quot; class=&quot;headerlink&quot; title=&quot;调试&quot;&gt;&lt;/a&gt;调试&lt;/h3&gt;&lt;p&gt;当用 Webpack 打包时你需要使用&lt;a href=&quot;https://github.com/srackham/riot-todo/blob/master/webpack.config.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发工具 source-map 配置选项&lt;/a&gt;来为你打包后的应用生成 &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;source map&lt;/a&gt; 文件。这使得你可以在 ES6 的源码文件中进行调试。&lt;/p&gt;
&lt;p&gt;当需要浏览和调试源码时，打开浏览器的 &lt;em&gt;Sources 窗口&lt;/em&gt;然后定位到&lt;code&gt;webpack:///.&lt;/code&gt;文件夹：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Firefox 中：打开 Debugger（Ctrl+Shift+S）。&lt;/li&gt;
&lt;li&gt;在 Google Chrome 中：打开 Console（Ctrl+Shift+J）然后点击 &lt;em&gt;Sources&lt;/em&gt; 标签来查看源码面板。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我不是很喜欢调试程序和设置断点——大多数情况下我仅仅会有策略地在代码中放置暂时性的&lt;code&gt;console.log()&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;未来蓝图&quot;&gt;&lt;a href=&quot;#未来蓝图&quot; class=&quot;headerlink&quot; title=&quot;未来蓝图&quot;&gt;&lt;/a&gt;未来蓝图&lt;/h2&gt;&lt;p&gt;Riot（类似 React）是一个 UI 库而不是一个框架。这非常棒（相对于大包大揽的框架来说，我更喜欢小而精的库的集合），但是对于具有一定复杂度的应用来说就需要条理清晰的高级的结构（一个体系结构）来提高可伸缩性、可发展性和可维护性。&lt;a href=&quot;https://www.npmjs.com/package/flux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flux&lt;/a&gt; 为类似React的应用增加了体系结构的选择。我喜欢 Flux，因为它很容易理解并且它能给人一种很直观的感觉（并非出于任何理论上的信仰）。&lt;a href=&quot;https://github.com/srackham/riot-todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Riot Todo app&lt;/a&gt; 使用了名为 &lt;a href=&quot;https://github.com/jimsparkman/RiotControl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RiotControl&lt;/a&gt; 的 Flux 风格的 dispatcher（经过轻微修改）来实现 Flux 体系结构。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;原文出处：&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;srackham&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://blog.srackham.com/posts/riot-es6-webpack-apps/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building Apps with Riot, ES6 and Webpack&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在读完 Muut 上 &lt;a href=&quot;https://muut.com/blog/technology/frameworkless-javascript.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Frameworkless JavaScri
    
    </summary>
    
      <category term="技术研究" scheme="http://chriscindy.top/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Riot.js" scheme="http://chriscindy.top/tags/Riot-js/"/>
    
  </entry>
  
  <entry>
    <title>Composition Event</title>
    <link href="http://chriscindy.top/2016/07/11/Composition-Event/"/>
    <id>http://chriscindy.top/2016/07/11/Composition-Event/</id>
    <published>2016-07-11T02:26:38.000Z</published>
    <updated>2016-08-22T10:10:38.000Z</updated>
    
    <content type="html">&lt;p&gt;Composition Event，中文译为复合事件，是 DOM 3 级事件中新添加的一类事件类型，用于处理 IME 的输入序列。IME（Input Method Editor，输入法编辑器）可以让用户输入在物理键盘上找不到的字符。复合事件就是针对检测和处理这种输入而设计的。也因为以上所述原因，复合事件很少为通常使用拉丁系语言输入的开发者所知（因为拉丁字母都能通过物理键盘输入）。当然，即使是使用非拉丁系语言比如中文作为输入的开发者，也不见得知道复合事件，因为开发中用到该种事件类型的情况比较少见。&lt;/p&gt;
&lt;p&gt;IME 复合系统的工作原理如下：缓存用户的键盘输入，直到一个字符被选中后才确定输入。缓存的键盘输入会暂时展示在输入框中，但不会真正被插入到 DOM 中。如下图所示。但是如果在复合事件的过程中改变了输入框的值（比如切换了输入法或者直接按下 enter 键），复合事件将提前结束，同时缓存的键盘输入值将会插入到输入框中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/72f96cbagw1f5pr65nfcxj20zi09cwfq.jpg&quot; alt=&quot;10:21:17.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;复合事件类型包含以下几种事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compositionstart：当 IME 的文本复合系统打开时触发。&lt;/li&gt;
&lt;li&gt;compositionend：在 IME 的文本复合系统关闭即用户选中了字符并确定输入时触发，表示返回正常键盘的输入状态。&lt;br&gt;-compositionupdate：在 compositionstart 事件触发后，compositionend 事件触发前这段时间内，每次向输入字段中进行输入时均会触发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：input 事件将在复合事件后触发。&lt;/p&gt;
&lt;p&gt;但是，实际情况与理想还是有一定距离的，复合事件的兼容性比较一般。下图是 MDN 中列出的兼容性表现，详情可见 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/72f96cbagw1f5pr91ls0nj21420dg75t.jpg&quot; alt=&quot;10:24:08.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/72f96cbagw1f5pr973kpuj214s0dtabp.jpg&quot; alt=&quot;10:24:13.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;综上，在使用复合事件处理 input 相关的问题时，仍然需要慎重。&lt;/p&gt;
&lt;p&gt;注：本文参考尤雨溪博客中 &lt;a href=&quot;http://blog.evanyou.me/2014/01/03/composition-event/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DOM COMPOSITION EVENTS COMPATIBILITY NOTES&lt;/a&gt; 一文。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Composition Event，中文译为复合事件，是 DOM 3 级事件中新添加的一类事件类型，用于处理 IME 的输入序列。IME（Input Method Editor，输入法编辑器）可以让用户输入在物理键盘上找不到的字符。复合事件就是针对检测和处理这种输入而设计的
    
    </summary>
    
      <category term="技术研究" scheme="http://chriscindy.top/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="JavaScript" scheme="http://chriscindy.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>两个Git帐号如何在一台电脑上共存</title>
    <link href="http://chriscindy.top/2016/07/08/%E4%B8%A4%E4%B8%AAGit%E5%B8%90%E5%8F%B7%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E5%85%B1%E5%AD%98/"/>
    <id>http://chriscindy.top/2016/07/08/两个Git帐号如何在一台电脑上共存/</id>
    <published>2016-07-08T08:11:59.000Z</published>
    <updated>2016-08-22T09:52:21.000Z</updated>
    
    <content type="html">&lt;p&gt;相信很多开发者都会遇到在自己的电脑上使用不止一个 git 帐号的情况。一个一般是自己的 github 帐号，另一个则是公司的 git 帐号，比如 gitlab、bitbucket 等。如果采用 https 方式通信，那么 git 帐号间不会有冲突，但你在每次 pull、push 的时候都要输入帐号密码，十分繁琐。而且当代码库达到十分庞大的规模时，如果仍然采用 https 方式，在 git pull 时可能出现超时不响应的情况，此时只能采用 ssh 方式。ssh 在配置完 ssh key 后使用起来很方便，但是 git 帐号间可能出现冲突，这时候该如何解决呢？&lt;br&gt;配置 ssh key 的方式此处不再赘述，假设 &lt;code&gt;.ssh&lt;/code&gt; 文件夹下有 id_rsa、id_rsa.pub、didi_id_rsa、didi_id_rsa.pub，分别对应个人 github 帐号私钥公钥以及公司 git 帐号私钥公钥。如果不进行设置，使用 github 账号时没有问题，但是使用公司账号时，由于默认情况下私钥存放在 &lt;code&gt;id_rsa&lt;/code&gt; 文件中，因此 git 仍会尝试用 id_rsa 中而不是 didi_id_rsa 中的私钥去与服务器上添加的公钥进行比对，自然而然会报错。通常这种情况下 git 会让你输入密码，笔者连续三次输入密码错误（其实根本不知道该密码为何物），报错，Permission denied。&lt;br&gt;网络上的解决方案普遍为在 ssh 的配置文件中加入以下字段：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Host github.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; hostname gitlab.zjut.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; User Boy-A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; IdentityFile /User/&amp;lt;yourusername&amp;gt;/.ssh/id_rsa&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Host git.xiaojukeji.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; hostname git.xiaojukeji.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; User Boy-B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; IdentityFile /User/&amp;lt;yourusername&amp;gt;/.ssh/didi_id_rsa&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该文件的主要作用就是指明各个 git 帐号对应的 User 以及 IdentityFile 的文件位置。当配置完毕后，在各个项目 repo 中应用自己的用户名以及邮箱：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1.取消 global&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global --unset user.name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global --unset user.email&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2.设置每个项目 repo 的自己的 user.email&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config  user.email &amp;quot;xxxx@xx.com&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config  user.name &amp;quot;ddfe&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此，各个 git 帐号间就可以“井水不犯河水”了。&lt;/p&gt;
&lt;p&gt;但是，最麻烦的地方其实并不在这里，而是这个配置文件究竟位于何处。根据网友的分享，Window 系统中，该配置信息存放在名为 config 的文件中，位置在 &lt;code&gt;~/.ssh/&lt;/code&gt; 目录下，而在Linux/Unix系统中配置信息则保存在 ssh_config 文件中，至于位置，众说纷纭。笔者使用的是 macOS 系统，尝试用 “ssh -vT git@git.xiaojukeji.com” 去查看 ssh 连接主机的 debug 信息，终于发现了头绪，debug信息的第二行如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;debug1: Reading configuration data /etc/ssh/ssh_config&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;终于找到了文件的位置！修改之，大功告成！&lt;/p&gt;
&lt;h2 id=&quot;总结：&quot;&gt;&lt;a href=&quot;#总结：&quot; class=&quot;headerlink&quot; title=&quot;总结：&quot;&gt;&lt;/a&gt;总结：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用命令 “ssh -vT git@xxx.com” 查看 ssh_config 文件的位置&lt;/li&gt;
&lt;li&gt;进入 ssh_config 文件，配置各个 git 帐号的 User 以及 IdentityFIle&lt;/li&gt;
&lt;li&gt;在各个项目中配置好 user.name 以及 user.email&lt;/li&gt;
&lt;li&gt;在各个 git 帐号间尽情穿梭吧~&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;相信很多开发者都会遇到在自己的电脑上使用不止一个 git 帐号的情况。一个一般是自己的 github 帐号，另一个则是公司的 git 帐号，比如 gitlab、bitbucket 等。如果采用 https 方式通信，那么 git 帐号间不会有冲突，但你在每次 pull、pu
    
    </summary>
    
      <category term="解决方案" scheme="http://chriscindy.top/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="Git" scheme="http://chriscindy.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://chriscindy.top/2016/07/08/Hello%20World/"/>
    <id>http://chriscindy.top/2016/07/08/Hello World/</id>
    <published>2016-07-08T03:25:04.000Z</published>
    <updated>2016-08-22T10:15:21.000Z</updated>
    
    <content type="html">&lt;p&gt;恩，这是 hexo 建好后默认的第一篇博文，没有想过删除它，因为我觉得对于这样一个有纪念意义的时刻，应该有一篇文章能够记录一下。&lt;/p&gt;
&lt;p&gt;没错，终于有自己可以写文章的地方了，感觉就像是终于有了一个只属于自己的小窝，这种美妙的感觉难以言表。从今以后，就在这里分享技术，感悟生活啦。&lt;/p&gt;
&lt;p&gt;配置 Hexo 的过程并不困难，就是有些繁琐。之前选用了一个比较小众但很清新的主题 &lt;a href=&quot;https://github.com/ahonn/hexo-theme-even&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;even&lt;/a&gt;，但是发现有各种功能上的缺失，终于还是决定回到最强势最完善的 NexT 上，折腾一圈，安装完各种插件，看着博客的功能慢慢丰满起来，虽然没有太大的难度，但是仍有一种满满的成就感。&lt;/p&gt;
&lt;p&gt;所以，Hello World，向成为前端大拿努力！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;恩，这是 hexo 建好后默认的第一篇博文，没有想过删除它，因为我觉得对于这样一个有纪念意义的时刻，应该有一篇文章能够记录一下。&lt;/p&gt;
&lt;p&gt;没错，终于有自己可以写文章的地方了，感觉就像是终于有了一个只属于自己的小窝，这种美妙的感觉难以言表。从今以后，就在这里分享技术，感
    
    </summary>
    
      <category term="生活感悟" scheme="http://chriscindy.top/categories/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="里程碑" scheme="http://chriscindy.top/tags/%E9%87%8C%E7%A8%8B%E7%A2%91/"/>
    
  </entry>
  
</feed>
